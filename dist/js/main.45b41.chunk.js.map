{"version":3,"sources":["webpack:///./src/routes.tsx","webpack:///./src/components/layout/conponents/Item.tsx","webpack:///./src/components/layout/conponents/head.tsx","webpack:///./src/components/layout/index.tsx","webpack:///./src/components/layout/utils.ts","webpack:///./src/App.tsx","webpack:///./src/index.tsx","webpack:///./src/assets/images/logo.png"],"names":["path","routes","name","icon","HomeOutlined","component","son","left","history","pathname","showSon","setShowSun","key","className","onClick","push","style","paddingLeft","event","preventDefault","cancelable","stopPropagation","DownOutlined","map","item","paths","Item","children","title","bottom","route","breadcrumbs","end","pick","index","length","pop","getPaths","location","showMenu","setShowMenu","RouteList","exact","fallback","render","to","antdConfig","autoInsertSpaceInButton","locale","zh_CN","renderEmpty","description","image","basename","document","getElementById","module","exports"],"mappings":"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","file":"js/main.45b41.chunk.js","sourcesContent":["import { HomeOutlined } from '@ant-design/icons'\nimport React, { lazy } from 'react'\nimport { IRoute } from '@/types/route'\n\nconst routes: IRoute = {\n  path: '/',\n  routes: [\n    {\n      path: '/home',\n      name: 'DashBoard',\n      icon: <HomeOutlined />,\n      component: lazy(() => import('@/pages/home')),\n    },\n    {\n      path: '/fund',\n      name: '基金',\n      icon: <HomeOutlined />,\n      component: lazy(() => import('@/pages/fund/overview')),\n      routes: [\n        {\n          path: '/fund/sort',\n          name: '持仓排序',\n          component: lazy(() => import('@/pages/fund/sort')),\n        },\n        {\n          path: '/fund/plate',\n          name: '板块列表',\n          component: lazy(() => import('@/pages/fund/plate')),\n        },\n        {\n          path: '/fund/option',\n          name: '编辑',\n          component: lazy(() => import('@/pages/fund/option')),\n        },\n      ],\n    },\n  ],\n}\nexport default routes\n","import React, { FC, useState } from 'react'\nimport { Route } from '@/types/route'\nimport { DownOutlined } from '@ant-design/icons'\nimport cls from 'classnames'\nimport { useHistory } from 'react-router'\n\nconst ItemLi: FC<\n  Route & {\n    son?: boolean\n    left?: number\n  }\n> = ({ path, name, routes, icon, component, son, left = 16 }) => {\n  const history = useHistory()\n  const { pathname = '' } = history.location\n  const [showSon, setShowSun] = useState<boolean>(pathname.indexOf(path) !== -1)\n  return (\n    <li key={path} className={'pro-layout_slide_menu_li'}>\n      <div\n        onClick={() => {\n          if (!!component) history.push(path)\n          setShowSun(true)\n        }}\n        className={cls('pro-layout_slide_menu_li_item', {\n          // ['pro-layout_slide_menu_li_item_action']: showSon,\n        })}\n      >\n        <div\n          className={cls('pro-layout_slide_menu_li_title')}\n          style={{ paddingLeft: `${left}px` }}\n        >\n          {!son && icon}\n          <p>{name}</p>\n        </div>\n        {routes && (\n          <i\n            onClick={(event) => {\n              event.preventDefault()\n              event.cancelable = true\n              event.stopPropagation()\n              setShowSun(!showSon)\n            }}\n          >\n            <DownOutlined />\n          </i>\n        )}\n      </div>\n      {routes && showSon && (\n        <Item routes={routes} left={left + 10} son={true} />\n      )}\n    </li>\n  )\n}\n\nconst Item: FC<{\n  routes: Route[]\n  son?: boolean\n  left?: number\n}> = ({ routes, son, left = 16 }) => {\n  return (\n    <ul className={'pro-layout_slide_menu_ul'}>\n      {routes.map((item) => {\n        return <ItemLi key={item.path} son={son} left={left} {...item} />\n      })}\n    </ul>\n  )\n}\n\nexport default Item\n","import React, { FC, memo } from 'react'\nimport { Breadcrumb } from 'antd'\nimport { Route } from '@/types/route'\nimport { useHistory } from 'react-router'\n\nconst Index: FC<{\n  paths: Route[]\n}> = ({ paths }) => {\n  const history = useHistory()\n  return (\n    <header className='pro-layout_content_header'>\n      <div>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <span className='cms-pointer' onClick={() => history.push('/home')}>\n              home\n            </span>\n          </Breadcrumb.Item>\n          {paths.map((item: Route) => {\n            const { path, component, name } = item\n            return (\n              <Breadcrumb.Item key={path + name}>\n                {!!component ? (\n                  <span\n                    className='cms-pointer'\n                    onClick={() => history.push(path)}\n                  >\n                    {name}\n                  </span>\n                ) : (\n                  name\n                )}\n              </Breadcrumb.Item>\n            )\n          })}\n        </Breadcrumb>\n      </div>\n    </header>\n  )\n}\nexport default memo(Index)\n","import React, { FC, ReactNode, Fragment, useState } from 'react'\nimport { AppstoreAddOutlined } from '@ant-design/icons'\nimport { IRoute } from '@/types/route'\nimport cls from 'classnames'\nimport { useHistory } from 'react-router'\nimport MenuItem from './conponents/Item'\nimport Head from './conponents/head'\nimport { getPaths } from './utils'\nimport './index.scss'\n\nconst Layout: FC<{\n  title?: (showMenu: boolean) => ReactNode | ReactNode\n  bottom?: (showMenu: boolean) => ReactNode | ReactNode\n  route: IRoute\n}> = ({\n  children,\n  title = (\n    <Fragment>\n      <img src={require('@/assets/images/logo.png')} alt='' />\n      <p className='pro-layout_menu_title'>聚宝盆</p>\n    </Fragment>\n  ),\n  bottom = (\n    <Fragment>\n      <AppstoreAddOutlined size={32} />\n      <p className='pro-layout_menu_title'>聚宝盆</p>\n    </Fragment>\n  ),\n  route,\n}) => {\n  const { routes } = route\n  const history = useHistory()\n  const { location } = history\n  const { pathname } = location\n  const paths = getPaths(routes, pathname)\n  const [showMenu, setShowMenu] = useState<boolean>(true)\n\n  return (\n    <div className='pro-layout_container'>\n      <aside\n        className={cls('pro-layout_menu', {\n          ['pro-layout_menu_hide']: !showMenu,\n        })}\n      >\n        <div className='pro-layout_slide_children'>\n          <div className='pro-layout_slide_top'>\n            {typeof title === 'function' ? title(showMenu) : title}\n          </div>\n          <div className='pro-layout_slide_menu'>\n            <MenuItem routes={routes} />\n          </div>\n          <div\n            onClick={() => setShowMenu(!showMenu)}\n            className='pro-layout_slide_bottom'\n          >\n            {typeof bottom === 'function' ? bottom(showMenu) : bottom}\n          </div>\n        </div>\n      </aside>\n      <section className='pro-layout_content'>\n        <Head paths={paths} />\n        <section className='pro-layout_content_section'>{children}</section>\n        <footer className='pro-layout_content_footer'></footer>\n      </section>\n    </div>\n  )\n}\n\nexport default Layout\n","import { Route } from '@/types/route'\n\nexport const getPaths = (routes: Route[], path: string) => {\n  if (!path) return []\n  const breadcrumbs: Route[] = []\n  let end = false\n\n  function pick(routes: Route[]) {\n    let index = 0\n    if (end) return\n    while (index < routes.length && !end) {\n      const item = routes[index]\n      breadcrumbs.push(item)\n      if (path === item.path) end = true\n      else {\n        if (item.routes) pick(item.routes)\n        if (!end) breadcrumbs.pop()\n        index++\n      }\n    }\n  }\n  pick(routes)\n  return breadcrumbs\n}\n","import React, { memo, Suspense, FC, Fragment } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport routes from './routes'\n\nconst RouteList: FC<any> = ({ path, exact, component, routes }) => {\n  return (\n    <Fragment>\n      {path && component && (\n        <Route key={path} path={path} exact={!exact} component={component} />\n      )}\n      {routes &&\n        routes.map((item: any) => {\n          return <RouteList key={item.path + item.name} {...item} />\n        })}\n    </Fragment>\n  )\n}\n\nfunction App() {\n  return (\n    <Suspense fallback={<></>}>\n      <Switch>\n        <Route path={'/'} exact render={() => <Redirect to={'/home'} />} />\n        <RouteList {...routes} />\n        {/*<Redirect to={ROUTES_PATH.NOT_FOUND} />*/}\n      </Switch>\n    </Suspense>\n  )\n}\n\nexport default memo(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\n\nimport { ConfigProvider, Empty } from 'antd'\nimport zh_CN from 'antd/es/locale-provider/zh_CN'\nimport 'core-js/stable'\nimport 'regenerator-runtime/runtime'\nimport routes from '@/routes'\nimport Layout from '@/components/layout'\nimport App from '@/App'\nimport '@/styles/index.less'\n\nimport './index.scss'\n\nconst antdConfig = {\n  autoInsertSpaceInButton: false,\n  locale: zh_CN,\n  renderEmpty: () => (\n    <Empty description='暂无相关信息' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n  ),\n}\n\nReactDOM.render(\n  <ConfigProvider {...antdConfig}>\n    <HashRouter basename={'/'}>\n      <Layout route={routes}>\n        <App />\n      </Layout>\n    </HashRouter>\n  </ConfigProvider>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"assets/images/logo.98e88.png\";"],"sourceRoot":""}